#*
 * Copyright 2013 Michael Osipov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#

## $Id$

                            ----------------------
                                  Overview
                            ----------------------
                               Michael Osipov
                            ----------------------
                                 2013-08-03
                            ----------------------

About ${project.name}

  ${project.description} It integrates your Java webapp in your Active Direcory environment with ease.

* Getting Started

  {{{./download.html}Download}} the artifact, read the {{{./user-guide.html}user guide}}
  and get started.

* Origin of this Project

  Working in a corporate environment leaves you virtually no option of not having real SSO for a
  (Java) webapp, especially when this works in the Microsoft IIS with a single click. Unfortunately,
  the Apache Tomcat did not have anything like this out of the box for years.\
  After a deep dive into Kerberos, GSS-API, Active Directory and LDAP in Java, I made a custom component
  to fill that gap. Portions of this project have been {{{https://issues.apache.org/bugzilla/show_bug.cgi?id=48685}integrated}}
  into Apache Tomcat 7. Though, this project covers much more, doesn't stop with a sole authenticator
  and works in Apache Tomcat 6 too.

  This library have served me very well for many years and still does a great job in a complex
  multi-realm enviroment, hopefully it will do for you too.
